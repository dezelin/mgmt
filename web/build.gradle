apply plugin: 'java'

version = '1.0'

configurations {
    jruby
}

dependencies {
    jruby 'org.jruby:jruby-complete:1.7.4'
    runtime 'net.lingala.zip4j:zip4j:1.2.3'
    runtime 'org.xeustechnologies:jcl-core:2.3'
    runtime project(':cloudius')
    runtime project(':cli')// until crush is default
    runtime 'com.j256.simplejmx:simplejmx:1.1'
}

ext {
    gemsDir = file(projectDir.path + '/vendor/gems')
    bundleDir = file(projectDir.path +'/vendor/bundle/jruby/1.9/')
}

task installBundler(type: JavaExec) {
    outputs.dir gemsDir
    classpath = configurations.jruby
    main = "org.jruby.Main"
    args "-S gem install --no-rdoc --no-ri bundler -i ${gemsDir}".tokenize()

    doFirst {
        gemsDir.mkdirs()
    }
}

task bundleInstall(type: JavaExec, dependsOn:'installBundler') {
    environment GEM_HOME: gemsDir, GEM_PATH: gemsDir, PATH: "${gemsDir}/bin/"
    classpath = configurations.jruby
    inputs.file "${projectDir}/Gemfile"
    outputs.dir "${projectDir}/vendor/bundle/"
    main = "org.jruby.Main"
    args "-S bundle install --path=${project.projectDir.path}/vendor/bundle --binstubs".tokenize()
}

task runapp(type: JavaExec){
    environment GEM_HOME: bundleDir, GEM_PATH: bundleDir
    classpath = project(':cli').jar.outputs.files.plus(configurations.jruby).plus(configurations.runtime)
    main = "org.jruby.Main"
    args "bin/app dev".tokenize()
    doFirst {
        file("${buildDir}/uploads").mkdirs()
	  file("${buildDir}/apps").mkdirs()
    }

}

task webjar(type: JavaExec, overwrite: true,dependsOn:'bundleInstall') {
  environment GEM_HOME: gemsDir, GEM_PATH: gemsDir
  inputs.dir "${projectDir}/bin"
  outputs.file "${buildDir}/web.jar"
  classpath = configurations.jruby
  main = "org.jruby.Main"
  args "-S bin/puck --extra-files views/** public/**".tokenize()
}

task deleteVendor(type: Delete) {
  delete "${project.projectDir.path}/vendor"
}

task gemList(type: JavaExec){
    environment GEM_HOME: bundleDir, GEM_PATH: bundleDir
    classpath = project(':cli').jar.outputs.files.plus(configurations.jruby)
    main = "org.jruby.Main"
    args "-S gem list".tokenize()
}

jar {
    dependsOn configurations.runtime, 'webjar'
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    from zipTree("${buildDir}/web.jar")
    manifest.attributes('Main-Class': 'org.jruby.JarBootstrapMain')
}

task releaseZip(type:Zip, dependsOn: jar ){
  ['public', 'views', 'templates','config','bin'].each {p -> into(p){ from p} }
  from jar
}

artifacts {
  releases releaseZip
}

artifactoryPublish {
  skip = false //Skip build info analysis and publishing (false by default) 
  publishConfigs (configurations.releases)
  // properties = ['qa.level': 'basic', 'q.os': 'win32, deb, osx']
}
